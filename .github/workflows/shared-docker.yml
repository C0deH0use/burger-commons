name: Build and publish DockerImage(s) workflow

permissions:
  checks: write
  contents: write
  packages: write

on:
  workflow_call:

jobs:
  publish:
    runs-on: ubuntu-latest

    if: >
      github.ref == 'refs/heads/main' || 
      (github.event_name == 'pull_request' && startsWith(github.head_ref, 'test/cicd-pipeline-test'))
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: commit
        uses: prompt/actions-commit-hash@c5ad2f68ba7eb1ef85bf910e2cc0278cca92d987

      - name: Read Properties
        id: read-properties
        uses: christian-draeger/read-properties@908f99d3334be3802ec7cb528395a69d19914e7b  #v1.1.1
        with:
          path: 'gradle.properties'
          properties: 'applicationVersion'

      - name: Application release version
        run: |
          echo GIT Commit HASH: ${{ steps.commit.outputs.short }}
          echo Application Version ${{ steps.read-properties.outputs.applicationVersion }}

      - name: Set Short SHA for Docker Image
        run: echo "DOCKER_RELEASE_VERSION=${{ steps.read-properties.outputs.applicationVersion }}-${{ steps.commit.outputs.short }}" >> $GITHUB_ENV

      - name: Set DOCKER IMAGE in lower case
        run: echo "DOCKER_IMAGE=${GITHUB_REPOSITORY@L}" >> $GITHUB_ENV   # Bash function to switch to lower case the environment variable.

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0

      - name: Build and push Docker images
        uses: docker/build-push-action@v6.13.0
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ env.DOCKER_IMAGE }}:latest, ghcr.io/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_RELEASE_VERSION }}
          build-args: | 
            GITHUB_USER=${{ github.actor }} 
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
